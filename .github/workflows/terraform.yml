name: 'myghaformodules-deps'

on:
  pull_request:

jobs:
  terraform:
    name: 'myghaformodules-deps-test'
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        path:
          - test-a
          - test-b
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TFC_TOKEN }}
    steps:
      - name: Setup GHA requirements
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Checkout
        uses: actions/checkout@v3

      # Note:  if you use Terraform version 1.2.0 or greater, no need to do this
      # setup or teardown step as the env variable is supported
      - name: Setup Terraform Cloud Authn
        id: setupterraform
        working-directory: ./tests/${{ matrix.path }}
        run: ../../.github/scripts/setup_terraform.sh

      - name: Setup Terraform Version
        uses: hashicorp/setup-terraform@v1
        with:
          # Note:  cli_config_credentials_token doesn't locate .terraformrc in
          # the correct path for terraform cli to find it
          cli_config_credentials_token: ${{ secrets.TFC_TOKEN }}
          terraform_version: 1.1.0

      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::238080251717:role/ghatesting-sandbox
          aws-region: us-east-1
          role-duration-seconds: 3600

      - name: Terraform Init
        id: init
        working-directory: ./tests/${{ matrix.path }}
        run: terraform init -input=false

      - name: Terraform Plan
        id: plan
        continue-on-error: true
        working-directory: ./tests/${{ matrix.path }}
        run: terraform plan -no-color -input=false

      - name: Teardown Terraform
        id: teardownterraform
        working-directory: ./tests/${{ matrix.path }}
        run: rm -f ~/.terraformrc

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
